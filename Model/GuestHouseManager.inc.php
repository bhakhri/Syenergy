<?php
//-------------------------------------------------------
//  THIS FILE IS USED FOR DB OPERATION FOR "city" TABLE
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008 )
// Copyright 2008-2000: Chalkpad Technologies Pvt. Ltd.
//--------------------------------------------------------
require_once(DA_PATH . '/SystemDatabaseManager.inc.php');

class GuestHouseManager {
	private static $instance = null;
	
//--------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR CREATING AN OBJECT OF "GuestHouseManager" CLASS
//
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//
//-------------------------------------------------------------------------------      
	private function __construct() {
	}

//-------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING AN INSTANCE OF "GuestHouseManager" CLASS
//
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//
//-------------------------------------------------------------------------------       
	public static function getInstance() {
		if (self::$instance === null) {
			$class = __CLASS__;
			return self::$instance = new $class;
		}
		return self::$instance;
	}
    
//----------------------------------------------------------------------
// THIS FUNCTION IS USED FOR ADDING A GUEST HOUSE BOOKING REQUEST
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//----------------------------------------------------------------------
	public function addGuestHouseRequest($bookingNo,$guestName,$arrivalDate,$departureName,$isAllocated,$requestedUserId,$requestedDate,$budgetHead,$startAmPm,$endAmPm,$startTime,$endTime) {

		return SystemDatabaseManager::getInstance()->runAutoInsert('guest_house_allocation', 
         array('bookingNo','guestName','arrivalDate','departureDate','isAllocated','requesterUsedId','requestedDate','budgetHeadId','arrivalTime','arrivalAmPm','departureTime','departureAmPm'), 
         array($bookingNo,$guestName,$arrivalDate,$departureName,$isAllocated,$requestedUserId,$requestedDate,$budgetHead,$startTime,$startAmPm,$endTime,$endAmPm) 
        );
	}


//-------------------------------------------------------
// THIS FUNCTION IS USED FOR EDITING A CITY
// $id:allocationId
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//
//--------------------------------------------------------        
    public function editGuestHouseRequest($allocationId,$guestName,$arrivalDate,$departureName,$requestedUserId,$requestedDate,$budgetHead,$startAmPm,$endAmPm,$startTime,$endTime) {
     
        return SystemDatabaseManager::getInstance()->runAutoUpdate('guest_house_allocation', 
        array('guestName','arrivalDate','departureDate','requesterUsedId','requestedDate','budgetHeadId','arrivalTime','arrivalAmPm','departureTime','departureAmPm'), 
        array($guestName,$arrivalDate,$departureName,$requestedUserId,$requestedDate,$budgetHead,$startTime,$startAmPm,$endTime,$endAmPm), 
        "allocationId=$allocationId" );
    }
    
    
    public function editGuestHouseRequestAlternativeArrangement($allocationId,$alternativeArrangement) {
     
        return SystemDatabaseManager::getInstance()->runAutoUpdate('guest_house_allocation', 
        array('alternativeArrangement'), 
        array($alternativeArrangement), 
        "allocationId=$allocationId" );
    } 
    
//-------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING CITY LIST
//
//$conditions :db clauses
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//
//--------------------------------------------------------         
    public function getGuestHouseRequest($conditions='') {
     
        $query = "SELECT 
                        *
                  FROM 
                        guest_house_allocation
                  $conditions
                  ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }  
    
//-------------------------------------------------------------------------
// THIS FUNCTION IS USED GENERATING AUTO GENERATED BOOKING NO
// Author :Dipanjan Bhattacharjee 
// Created on : (17.05.2010)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//-------------------------------------------------------------------------
    public function getAutoGeneratedBookingNo() {
        
        $str="SELECT IFNULL(MAX(ABS(SUBSTRING(bookingNo,LENGTH('".BOOKING_NO_PREFIX."' ) +1, LENGTH(bookingNo) ) ) ),0)+1 AS bookingNo FROM guest_house_allocation ";
        $iCode=SystemDatabaseManager::getInstance()->executeQuery($str,"Query: $str");
        
        //generate new booking id
        $gCode=BOOKING_NO_PREFIX.str_pad($iCode[0]['bookingNo'],abs(BOOKING_NO_LENGTH-strlen(BOOKING_NO_PREFIX)-strlen($iCode[0]['bookingNo']))+1,'0',STR_PAD_LEFT);
        return $gCode;
    }

//-------------------------------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR DELETING A BOOKING DETAILS
// $cityId :allocationId of the City
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//--------------------------------------------------------------------------------------------------------      
    public function deleteGuestHouseRequest($allocationId) {
     
        $query = "DELETE 
                  FROM 
                        guest_house_allocation 
                  WHERE 
                        allocationId=$allocationId
                  ";
        return SystemDatabaseManager::getInstance()->executeDelete($query,"Query: $query");
    }
    
    public function checkGuestHouseRequestStatus($allocationId) {
     
        $query = "SELECT
                        isAllocated 
                  FROM 
                        guest_house_allocation 
                  WHERE 
                        allocationId=$allocationId
                  ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }    

//-------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING CITY LIST
//
//$conditions :db clauses
//$limit:specifies limit
//orderBy:sort on which column
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//
//--------------------------------------------------------       
    
    public function getGuestHouseRequestList($conditions='', $limit = '', $orderBy=' gh.allocationId',$mode=1) {
        global $sessionHandler;
        $roleId=$sessionHandler->getSessionVariable('RoleId');
        $userId=$sessionHandler->getSessionVariable('UserId');
        
        $userIdCondition='';
        if($mode==2){ //from requester module
          if($roleId!=1){
              if($conditions=='') {
               $userIdCondition=' WHERE gh.requesterUsedId='.$userId;
              }
              else{
                 $userIdCondition=' AND gh.requesterUsedId='.$userId; 
              }
          }
        }
        $query = "SELECT 
                         gh.allocationId,
                         gh.guestName,
                         gh.arrivalDate,
                         gh.departureDate,
                         gh.isAllocated,
                         gh.bookingNo,
                         h.hostelName,
                         hr.roomName,
						 CONCAT(gh.departureTime,' ',gh.departureAmPm) AS dTime,
						 CONCAT(gh.arrivalTime,' ',gh.arrivalAmPm) AS aTime
                  FROM 
                         guest_house_allocation gh
                         LEFT JOIN hostel_room hr ON hr.hostelRoomId=gh.hostelRoomId
                         LEFT JOIN hostel h ON ( h.hostelId=hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE." )
                         $conditions
                         $userIdCondition
                  ORDER BY $orderBy 
                  $limit";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }    

//---------------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING TOTAL NUMBER OF CITIES
// $conditions :db clauses
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//----------------------------------------------------------------------------------------      
    public function getTotalGuestHouseRequest($conditions='',$mode=1) {
    
        global $sessionHandler;
        $roleId=$sessionHandler->getSessionVariable('RoleId');
        $userId=$sessionHandler->getSessionVariable('UserId');
        
        $userIdCondition='';
        if($mode==2){ //from requester module
          if($roleId!=1){
              if($conditions=='') {
               $userIdCondition=' WHERE gh.requesterUsedId='.$userId;
              }
              else{
                 $userIdCondition=' AND gh.requesterUsedId='.$userId; 
              }
          }
        }
        
        $query = "SELECT 
                        COUNT(*) AS totalRecords 
                  FROM 
                        guest_house_allocation gh
                        LEFT JOIN hostel_room hr ON hr.hostelRoomId=gh.hostelRoomId
                        LEFT JOIN hostel h ON ( h.hostelId=hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE." )
                        $conditions
                        $userIdCondition
                  ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }
    
    
//---------------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING DETAILS OF A GUEST HOUSE REQUEST
// $conditions : db clauses
// Author : Dipanjan Bhattacharjee 
// Created on : (18.05.2010)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//----------------------------------------------------------------------------------------
public function getGuestHouseRequestDetails($conditions='') {
     
        $query = "SELECT 
                         gh.allocationId,
                         gh.guestName,
                         gh.arrivalDate,
                         gh.arrivalTime,
                         gh.arrivalAmPm,
                         gh.departureDate,
                         gh.departureTime,
                         gh.departureAmPm,
                         gh.isAllocated,
                         gh.bookingNo,
                         h.hostelName,
                         hr.roomName,
                         h.hostelId,
                         hr.hostelRoomId,
                         gh.reason,
                         bd.headName,
                         gh.alternativeArrangement
                  FROM 
                         guest_house_allocation gh
                         LEFT JOIN hostel_room hr ON hr.hostelRoomId=gh.hostelRoomId
                         LEFT JOIN hostel h ON h.hostelId=hr.hostelId
                         INNER JOIN budget_heads bd ON bd.budgetHeadId=gh.budgetHeadId
                         $conditions
                  ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }
    
    
public function getPossibleVacantRoomList($conditions='', $limit = '', $orderBy=' h.hostelName',$conditions2='') {
        $query = "SELECT 
                        hr.hostelRoomId,
                        h.hostelId,
                        h.hostelName,
                        hr.roomName, 
                        (hr.roomCapacity - SUM(IF(gh.hostelRoomId IS NULL,0,1)) ) AS vacant
                   FROM 
                        hostel_room hr
                        LEFT JOIN guest_house_allocation gh ON ( gh.hostelRoomId = hr.hostelRoomId AND gh.isAllocated=1 $conditions )
                        INNER JOIN hostel h ON h.hostelId = hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE."
                        $conditions2
                   GROUP BY hr.hostelRoomId
                   HAVING vacant >0
                   ORDER BY $orderBy 
                   $limit";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }
    
    
public function makeGuestHouseRequestReject($allocationId,$reason,$userId,$date,$isAllocated) {
     
        $query = "UPDATE 
                         guest_house_allocation
                  SET 
                         reason='".add_slashes($reason)."',
                         isAllocated=$isAllocated,
                         authorizedUserId=$userId,
                         authorizedDate='".$date."',
                         hostelRoomId=NULL
                  WHERE
                         allocationId=$allocationId
                  ";
        return SystemDatabaseManager::getInstance()->executeUpdate($query);
    }
    

public function makeGuestHouseRequestAccept($allocationId,$roomId,$userId,$date,$isAllocated) {
     
        $query = "UPDATE 
                         guest_house_allocation
                  SET 
                         reason='',
                         isAllocated=$isAllocated,
                         authorizedUserId=$userId,
                         authorizedDate='".$date."',
                         hostelRoomId=$roomId
                  WHERE
                         allocationId=$allocationId
                  ";
        return SystemDatabaseManager::getInstance()->executeUpdate($query);
    }
    
public function getPossibleVacantRoomList2($conditions='',$conditions2='',$orderBy= ' h.hostelName') {
     
        $query = "SELECT 
                        hr.hostelRoomId,
                        h.hostelId,
                        h.hostelName,
                        hr.roomName,
						hr.roomCapacity,
                        IFNULL(gh.arrivalDate,-1) AS arrivalDate,
                        gh.arrivalTime,
                        gh.arrivalAmPm,
                        IFNULL(gh.departureDate,-1) AS departureDate,
                        gh.departureTime,
                        gh.departureAmPm
                   FROM 
                        hostel_room hr
                        LEFT JOIN guest_house_allocation gh ON ( gh.hostelRoomId = hr.hostelRoomId $conditions )
                        INNER JOIN hostel h ON h.hostelId = hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE."
                        $conditions2
                   ORDER BY $orderBy 
                   ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }
    

public function getGuestHouseReportList($conditions='', $limit = '', $orderBy=' gh.bookingNo') {
        global $sessionHandler;
        $query = "SELECT 
                         gh.allocationId,
                         gh.guestName,
                         gh.arrivalDate,
                         gh.arrivalTime,
                         gh.arrivalAmPm,
                         gh.departureDate,
                         gh.departureTime,
                         gh.departureAmPm,
                         gh.isAllocated,
                         gh.bookingNo,
                         h.hostelName,
                         hr.roomName,
                         IFNULL((SELECT e.employeeName FROM employee e WHERE e.userId=u.userId),u.userName) AS userName,
                         bh.headName
                  FROM 
                         guest_house_allocation gh
                         LEFT JOIN hostel_room hr ON hr.hostelRoomId=gh.hostelRoomId
                         LEFT JOIN hostel h ON ( h.hostelId=hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE." )
                         INNER JOIN `user` u ON ( u.userId =gh.requesterUsedId AND u.instituteId=".$sessionHandler->getSessionVariable('InstituteId')." )
                         INNER JOIN  budget_heads bh ON (bh.budgetHeadId=gh.budgetHeadId)
                         $conditions
                  ORDER BY $orderBy 
                  $limit";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }    

//---------------------------------------------------------------------------------------
// THIS FUNCTION IS USED FOR GETTING TOTAL NUMBER OF CITIES
// $conditions :db clauses
// Author :Dipanjan Bhattacharjee 
// Created on : (12.06.2008)
// Copyright 2008-2009 - Chalkpad Technologies Pvt. Ltd.
//----------------------------------------------------------------------------------------      
    public function getTotalGuestHouseReport($conditions='') {
    
        global $sessionHandler;
        
        $query = "SELECT 
                        COUNT(*) AS totalRecords 
                  FROM 
                        guest_house_allocation gh
                        LEFT JOIN hostel_room hr ON hr.hostelRoomId=gh.hostelRoomId
                        LEFT JOIN hostel h ON ( h.hostelId=hr.hostelId AND h.hostelType=".GUEST_HOUSE_TYPE." )
                        INNER JOIN `user` u ON ( u.userId =gh.requesterUsedId AND u.instituteId=".$sessionHandler->getSessionVariable('InstituteId')." )
                        INNER JOIN  budget_heads bh ON (bh.budgetHeadId=gh.budgetHeadId)
                        $conditions
                  ";
        return SystemDatabaseManager::getInstance()->executeQuery($query,"Query: $query");
    }
    
 public function getGuestHouseRequesterData($conditions='') {
        global $sessionHandler; 
        $systemDatabaseManager = SystemDatabaseManager::getInstance();
        $query = "
                  SELECT 
                        DISTINCT u.userId,
                        IFNULL((SELECT e.employeeName FROM employee e WHERE e.userId=u.userId),u.userName) AS userName
                  FROM
                        `user` u,
                        guest_house_allocation gh
                  WHERE
                         u.userId=gh.requesterUsedId
                         AND u.instituteId=".$sessionHandler->getSessionVariable('InstituteId')."
                         $conditions
                  ORDER BY userName
                 ";

        return $systemDatabaseManager->executeQuery($query,"Query: $query");
 }
    
 public function getHostelInfo($hostelId) {
        $query = "
                  SELECT 
                        hostelId,hostelName
                  FROM
                        hostel
                  WHERE
                        hostelId=$hostelId
                 ";
        return $systemDatabaseManager->executeQuery($query,"Query: $query");
 }
 
 public function getRoomInfo($roomId) {
        $query = "
                  SELECT 
                        hostelId,hostelName
                  FROM
                        hostel_room
                  WHERE
                        hostelRoomId=$roomId
                 ";
        return $systemDatabaseManager->executeQuery($query,"Query: $query");
 }
 
 public function getBudgetHeadInfo($headId) {
        $query = "
                  SELECT 
                        budgetHeadId,headName
                  FROM
                        budget_heads
                  WHERE
                        budgetHeadId=$headId
                 ";
        return $systemDatabaseManager->executeQuery($query,"Query: $query");
 }
               
  
}
// $History: GuestHouseManager.inc.php $
?>